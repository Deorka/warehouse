def max_tests():
    numbers = input().split(" ")
    l, r = list(map(lambda x: int(x), numbers))
    c = 0
    rank_l = len(str(l))
    rank_r = len(str(r))
    if rank_l == rank_r:
        c += find_count(l, r)
    else:
        c += find_count(l, 10 ** len(str(l)))
        c += find_count(10 ** (len(str(r)) - 1), r)
        c += 9 * (rank_r - rank_l - 1)
    print(c)


def create_rank(n):
    dig = 1
    for i in range(1, n, 1):
        dig = dig * 10 + 1
    return dig


def find_count(x, y):
    s = create_rank(len(str(x)))
    sum = s
    c = 0
    for i in range(1, 10):
        if (sum >= x) and (sum <= y):
            c += 1
        sum += s
    return c


"""Во время разработки некоторой задачи Саша решил сгенерировать несколько новых тестов. Каждый тест Саши должен 
представлять собой натуральное число, не меньшее ﻿ll﻿ и не большее ﻿rr﻿. Кроме того, натуральное число в тесте обязательно 
должно состоять из одинаковых цифр.

Например, число ﻿999999﻿ подходит под это требование, а число ﻿123123﻿ — нет. Какое максимальное число различных тестов 
сможет создать Саша?


Формат входных данных

В единственной строке вводятся два натуральных числа ﻿l,rl,r﻿ ﻿(1 \leq l,r \leq 10^{18})(1≤l,r≤10 
18
 )﻿— ограничения на тесты Саши.

Обратите внимания, что эти числа не вместятся в ﻿3232﻿-битный тип данных, используйте ﻿6464﻿-битный при необходимости


Формат выходных данных

Выведите одно число — количество тестов, которое может сделать Саша.."""

if __name__ == '__main__':
    max_tests()
