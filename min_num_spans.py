def spans():
    numbers = input().split(" ")
    n, t = list(map(lambda x: int(x), numbers))
    numbers = input().split(" ")
    numbers = list(map(lambda x: int(x), numbers))
    nt = int(input()) - 1
    ntf = numbers[nt] - numbers[0]
    ntl = numbers[n - 1] - numbers[nt]
    if (t >= ntf) or (t >= ntl):
        print(numbers[n - 1] - numbers[0])
    elif ntf < ntl:
        print(ntf + numbers[n - 1] - numbers[0])
    else:
        print(ntl + numbers[n - 1] - numbers[0])


"""У Кати насыщенный день на работе. Ей надо передать n разных договоров коллегам. Все встречи происходят 
на разных этажах, а между этажами можно перемещаться только по лестничным пролетам — считается, что это улучшает 
физическую форму сотрудников. Прохождение каждого пролета занимает ровно ﻿11﻿ минуту.

Сейчас Катя на парковочном этаже, планирует свой маршрут. Коллег можно посетить в любом порядке, но один из них покинет 
офис через ﻿tt﻿ минут. С парковочного этажа лестницы нет — только лифт, на котором можно подняться на любой этаж.

В итоге план Кати следующий:


Подняться на лифте на произвольный этаж. Считается, что лифт поднимается на любой этаж за ﻿00﻿ минут.
Передать всем коллегам договоры, перемещаясь между этажами по лестнице. Считается, что договоры на этаже передаются 
мгновенно.
В первые ﻿tt﻿ минут передать договор тому коллеге, который планирует уйти.
Пройти минимальное количество лестничных пролетов.
Помогите Кате выполнить все пункты ее плана.


Формат входных данных

В первой строке вводятся целые положительные числа ﻿nn﻿ и ﻿tt﻿  ﻿(2\leq n,t \leq 100)(2≤n,t≤100)﻿ — количество сотрудников и время, когда один из сотрудников покинет офис (в минутах). В следующей строке n чисел — номера этажей, на которых находятся сотрудники. Все числа различны и по абсолютной величине не превосходят 100. Номера этажей даны в порядке возрастания. В следующей строке записан номер сотрудника, который уйдет через t минут.
"""

if __name__ == '__main__':
    spans()
